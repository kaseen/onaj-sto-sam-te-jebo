# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]

jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Run install
      uses: borales/actions-yarn@v4
      with:
        cmd: install                  # will run `yarn install` command
        
    - name: Environment variables
      run: |
        echo "TOKENV2=${{secrets.TOKENV2}}" >> .env
        echo "TOKENV2_SECRET=${{secrets.TOKENV2_SECRET}}" >> .env
        echo "CONSUMER_KEY_V2=${{secrets.CONSUMER_KEY_V2}}" >> .env
        echo "CONSUMER_KEY_V2_SECRET=${{secrets.CONSUMER_KEY_V2_SECRET}}" >> .env
        echo "BEARER_TOKEN=${{secrets.BEARER_TOKEN}}" >> .env
        echo "" >> .env
        echo "AWS_ACCESS_KEY_ID=${{secrets.AWS_ACCESS_KEY_ID}}" >> .env
        echo "AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}}" >> .env
        echo "AWS_SDK_LOAD_CONFIG=${{secrets.AWS_SDK_LOAD_CONFIG}}" >> .env
        echo "" >> .env
        echo "NGROK_SECRET=${{secrets.NGROK_SECRET}}" >> .env
        echo "SHEETDB_ADMIN_MENU=${{secrets.SHEETDB_ADMIN_MENU}}" >> .env
        echo "" >> .env
        echo "BOT_ID=${{secrets.BOT_ID}}" >> .env
        echo "STORAGE_SAVE=${{secrets.STORAGE_SAVE}}" >> .env
        echo "SERVER_RESTART=${{secrets.SERVER_RESTART}}" >> .env
        echo "POST_STREAM_IMG_PERCENT=${{secrets.POST_STREAM_IMG_PERCENT}}" >> .env
        echo "MIN_FOLLOWERS_WEBHOOK=${{secrets.MIN_FOLLOWERS_WEBHOOK}}" >> .env
        echo "MAX_DAILY_USAGE=${{secrets.MAX_DAILY_USAGE}}" >> .env
        echo "ANTI_SPAM_SECONDS=${{secrets.ANTI_SPAM_SECONDS}}" >> .env
        echo "HEAD_ADMIN_ID=${{secrets.HEAD_ADMIN_ID}}" >> .env
        echo "PORT=${{secrets.PORT}}" >> .env
        
    - run: sudo pm2 restart BOT --cron-restart="0 */8 * * *"
